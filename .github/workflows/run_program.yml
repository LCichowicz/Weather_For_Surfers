name: Run Program Periodically

on:
  schedule:
    - cron: '5 6 * * *'  # Runs at 06:05 (UTC) -> 08:05 (Polish time)
    - cron: '5 12 * * *' # Runs at 12:05 (UTC) -> 14:05 (Polish time)
    - cron: '5 18 * * *' # Runs at 18:05 (UTC) -> 20:05 (Polish time)

  workflow_dispatch: # Allows manual triggering

permissions:
  actions: read
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step to install GitHub CLI
    - name: Update GitHub CLI
      run: sudo apt-get update && sudo apt-get install gh

    - name: Download last email artifact
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set GH_TOKEN to access GitHub CLI
      run: |
        gh run download --name last_email_date --dir . || echo "No previous artifact found"

    - name: Set environment variables
      run: |
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> $GITHUB_ENV
        echo "EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }}" >> $GITHUB_ENV

    - name: Run Data Loading
      run: python data_loading.py

    - name: Verify Data File
      run: |
        ls -l ./data_weather
        cat ./data_weather/visualcrossing.csv

    - name: Run script
      run: python app.py

    - name: Log Data Update
      run: cat ./data_weather/data_update_log.txt

    - name: Upload last email date artifact
      if: always()  # Ensures the step runs even if previous steps fail
      run: |
        if [ -f last_email_date.txt ]; then
          echo "Uploading last_email_date.txt..."
        fi

    - uses: actions/upload-artifact@v3
      with:
        name: last_email_date
        path: last_email_date.txt

